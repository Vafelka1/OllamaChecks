#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Receipt Analyzer API
"""

import requests
import json
import sys
import time
from pathlib import Path


def test_health():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check endpoint"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞...")
    
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
            return True
        else:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–º: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def test_root():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint...")
    
    try:
        response = requests.get("http://localhost:8000/", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
            return True
        else:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ—Ä–Ω–µ–≤—ã–º endpoint: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def test_analyze_receipt(image_path: str):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–∫–∞"""
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–∫–∞: {image_path}")
    
    image_file = Path(image_path)
    if not image_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
        return False
    
    try:
        with open(image_file, 'rb') as f:
            files = {'image': (image_file.name, f, 'image/jpeg')}
            response = requests.post(
                "http://localhost:8000/analyze-receipt",
                files=files,
                timeout=30
            )
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
            print(json.dumps(data, ensure_ascii=False, indent=2))
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {response.status_code}")
            try:
                error_data = response.json()
                print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
            except:
                print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def wait_for_service(max_attempts=30):
    """–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")
    
    for attempt in range(1, max_attempts + 1):
        try:
            response = requests.get("http://localhost:8000/health", timeout=2)
            if response.status_code == 200:
                print(f"‚úÖ –°–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ {attempt})")
                return True
        except:
            pass
        
        print(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}: —Å–µ—Ä–≤–∏—Å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤...")
        time.sleep(2)
    
    print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ –æ–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è")
    return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Receipt Analyzer API")
    print("=" * 50)
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    if not wait_for_service():
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints
    success = True
    
    success &= test_root()
    print()
    
    success &= test_health()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–∫–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª)
    if len(sys.argv) > 1:
        image_path = sys.argv[1]
        success &= test_analyze_receipt(image_path)
    else:
        print("‚ÑπÔ∏è  –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ–∫–∞ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:")
        print(f"   python {sys.argv[0]} /path/to/receipt.jpg")
    
    print()
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)


if __name__ == "__main__":
    main() 